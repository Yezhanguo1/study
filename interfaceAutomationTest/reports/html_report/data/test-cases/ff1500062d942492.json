{"uid":"ff1500062d942492","name":"用例名称：打开简书首页","fullName":"test_casedome.Test_show#test_01","historyId":"74f533afd2cef1b45bfe4bc245925924","time":{"start":1685087879028,"stop":1685087879103,"duration":75},"status":"failed","statusMessage":"AssertionError: assert 304 == 403\n +  where 403 = <Response [403]>.status_code","statusTrace":"self = <case.test_casedome.Test_show object at 0x000002B670FD08E0>\ncase_name = '打开简书首页', method = 'get', url = 'https://www.jianshu.com'\ndata = None, result = 304\n\n    @pytest.mark.parametrize('case_name,method, url, data, result',\n                             Excel.read_case_excel(Excel(),file_path=\"./test_case_date.xlsx\",Sheel_name=\"denglu\"))\n    @allure.story('登录场景')\n    @allure.title(\"用例名称：{case_name}\")\n    # def test_login(self,mothod, url, data):\n    #     resp=Login.login(mothod,url,data)\n    #     resp.contect\n    def test_01(self, case_name,method, url, data,result):\n        # try:\n        #     resp=Login.test_dome(Login(),method=method, url=url, data=data)\n        #\n        #     assert result == resp.status_code\n        #     my_log.info(f\"{case_name}||执行成功，预期结果-{result}-符合实际\")\n        # except Exception as e:\n        #     my_log.error(f\"main Exception: {traceback.format_exc()}\")\n        resp = Login.test_dome(Login(), method=method, url=url, data=data)\n    \n>       assert result == resp.status_code\nE       assert 304 == 403\nE        +  where 403 = <Response [403]>.status_code\n\ntest_casedome.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 304 == 403\n +  where 403 = <Response [403]>.status_code","statusTrace":"self = <case.test_casedome.Test_show object at 0x000002B670FD08E0>\ncase_name = '打开简书首页', method = 'get', url = 'https://www.jianshu.com'\ndata = None, result = 304\n\n    @pytest.mark.parametrize('case_name,method, url, data, result',\n                             Excel.read_case_excel(Excel(),file_path=\"./test_case_date.xlsx\",Sheel_name=\"denglu\"))\n    @allure.story('登录场景')\n    @allure.title(\"用例名称：{case_name}\")\n    # def test_login(self,mothod, url, data):\n    #     resp=Login.login(mothod,url,data)\n    #     resp.contect\n    def test_01(self, case_name,method, url, data,result):\n        # try:\n        #     resp=Login.test_dome(Login(),method=method, url=url, data=data)\n        #\n        #     assert result == resp.status_code\n        #     my_log.info(f\"{case_name}||执行成功，预期结果-{result}-符合实际\")\n        # except Exception as e:\n        #     my_log.error(f\"main Exception: {traceback.format_exc()}\")\n        resp = Login.test_dome(Login(), method=method, url=url, data=data)\n    \n>       assert result == resp.status_code\nE       assert 304 == 403\nE        +  where 403 = <Response [403]>.status_code\n\ntest_casedome.py:29: AssertionError","steps":[],"attachments":[{"uid":"f0b9cdd17fb0e75e","name":"log","source":"f0b9cdd17fb0e75e.txt","type":"text/plain","size":215}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"登录场景"},{"name":"feature","value":"登录模块"},{"name":"suite","value":"test_casedome"},{"name":"subSuite","value":"Test_show"},{"name":"host","value":"DESKTOP-IL88V2D"},{"name":"thread","value":"12092-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_casedome"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case_name","value":"'打开简书首页'"},{"name":"data","value":"None"},{"name":"method","value":"'get'"},{"name":"result","value":"304"},{"name":"url","value":"'https://www.jianshu.com'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ff1500062d942492.json","parameterValues":["'打开简书首页'","None","'get'","304","'https://www.jianshu.com'"]}